/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gastonranz.managementsystem.forms;

import com.mysql.cj.util.StringUtils;
import gastonranz.managementsystem.dao.ClienteDao;
import gastonranz.managementsystem.models.Cliente;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Gaston
 */
public class Formulario extends javax.swing.JFrame {
    
    private List<Cliente> arrayLista = new ArrayList<>();
//    private ClienteDao dao = new ClienteDao() Podr√≠a hacer lo mismo con Cliente Dao.

    /**
     * Creates new form Formulario
     */
    public Formulario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        id = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        deleteButton = new javax.swing.JButton();
        txtLastName = new javax.swing.JTextField();
        lastName = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        email = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        phoneNumber = new javax.swing.JLabel();
        idButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        name = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtId = new javax.swing.JLabel();
        setAllIdButton = new javax.swing.JButton();
        setIdButton = new javax.swing.JButton();
        txtSetId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        clearIdButton = new javax.swing.JButton();
        selectionOutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        id.setText("Id:");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(list);

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        lastName.setText("Last Name:");

        email.setText("Email:");

        phoneNumber.setText("Phone Number:");

        idButton.setText("Get ID number");
        idButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        name.setText("Name:");

        setAllIdButton.setText("Reset AI Number");
        setAllIdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setAllIdButtonActionPerformed(evt);
            }
        });

        setIdButton.setText("Set ID");
        setIdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setIdButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Edit Id:");

        clearButton.setText("Clear Fields");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        clearIdButton.setText("Clear ID");
        clearIdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearIdButtonActionPerformed(evt);
            }
        });

        selectionOutButton.setText("Sel. Out");
        selectionOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(idButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(setAllIdButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtId)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lastName)
                                    .addComponent(id)
                                    .addComponent(email)
                                    .addComponent(name))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                    .addComponent(txtLastName)
                                    .addComponent(txtEmail)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(phoneNumber)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPhoneNumber))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtSetId, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(selectionOutButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                        .addComponent(clearButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(clearIdButton)
                                        .addGap(10, 10, 10)
                                        .addComponent(setIdButton)))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(saveButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 30, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastName)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(email)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneNumber)
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSetId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(saveButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(idButton)
                    .addComponent(setIdButton)
                    .addComponent(clearIdButton))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setAllIdButton)
                    .addComponent(deleteButton)
                    .addComponent(clearButton)
                    .addComponent(selectionOutButton))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //Funci√≥n que ejecuto al realizar click en "Save".
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String name = this.txtName.getText();
//        int selection = this.list.getSelectedIndex(); // Si creo estas 2 l√≠neas solo tengo que colocar en el "if" arriba del dao. - cliente.getId();
//        Cliente cliente = arrayLista.get(selection);
        //DATO IMPORTANTE!!! Si utilizo el "Array" y quiero eliminar los datos que utilic√© debajo para "setear" los "clientes" con los valores de los recuadros editados y luego directamente llamo a los "getters" de ese array, nunca se van a efectuar los cambios, porque estoy sobre escribiendo los datos de la consulta a "mysql" con los mismos datos que ten√≠a antes, yo necesito los datos NUEVOS que se encuentran dentro de los cuadros.
        //Es por ello que si puedo evitar el uso de "cliente.setId(this.txtId.getText()); cuando declaro al "this.list.getSelectedIndex()" y al "arrayLista", porque el dato (el n√∫mero del array) que seleccion√© para editar contiene el N¬∞ de ID que siempre voy a utilizar, nunca se puede editar, no tiene un recuadro en el que acceda a su edici√≥n. Es por ello que siempre conserva el mismo valor y no existe problema en "sobre escribir" ese dato al solicitarmelo en la consulta de la funci√≥n "dao.update()".
        Cliente cliente = new Cliente();//Creo la propiedad cliente para poder acceder a los m√©todos de esa clase.
        cliente.setName(name);
        cliente.setLastName(this.txtLastName.getText());
        cliente.setEmail(this.txtEmail.getText());
        cliente.setPhoneNumber(this.txtPhoneNumber.getText());
        
        saveAction(cliente);
        
//        dao.save(cliente);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void saveAction(Cliente cliente) {
        ClienteDao dao = new ClienteDao();
        int selection = this.list.getSelectedIndex();
        
        if (StringUtils.isEmptyOrWhitespaceOnly(this.txtName.getText())
            && StringUtils.isEmptyOrWhitespaceOnly(this.txtLastName.getText())
            && StringUtils.isEmptyOrWhitespaceOnly(this.txtEmail.getText())
            && StringUtils.isEmptyOrWhitespaceOnly(this.txtPhoneNumber.getText())
                && this.list.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Please, type data on the fields or select a name on the list!");
        } else if (StringUtils.isEmptyOrWhitespaceOnly(this.txtId.getText())
            && StringUtils.isEmptyOrWhitespaceOnly(this.txtName.getText())
            && StringUtils.isEmptyOrWhitespaceOnly(this.txtLastName.getText())
            && StringUtils.isEmptyOrWhitespaceOnly(this.txtEmail.getText())
            && StringUtils.isEmptyOrWhitespaceOnly(this.txtPhoneNumber.getText())
                && this.list.isSelectedIndex(selection)) {
            JOptionPane.showMessageDialog(rootPane, "Please, type data on the fields or click on the button Edit!");
        } else if (!StringUtils.isEmptyOrWhitespaceOnly(this.txtId.getText())
            && StringUtils.isEmptyOrWhitespaceOnly(this.txtName.getText())
            && StringUtils.isEmptyOrWhitespaceOnly(this.txtLastName.getText())
            && StringUtils.isEmptyOrWhitespaceOnly(this.txtEmail.getText())
            && StringUtils.isEmptyOrWhitespaceOnly(this.txtPhoneNumber.getText())) {
            JOptionPane.showMessageDialog(rootPane, "You can't save a change without data in all of the fields!\nYou may type a name on the field at least!");
        } else if (StringUtils.isEmptyOrWhitespaceOnly(this.txtName.getText())) {
            JOptionPane.showMessageDialog(rootPane, "You may set a name");
        } else if(!StringUtils.isEmptyOrWhitespaceOnly(this.txtId.getText())) {
            cliente.setId(this.txtId.getText());
            dao.update(cliente);
            JOptionPane.showMessageDialog(rootPane, "Data:\nname: " + cliente.fullName() + "\nEmail: " + cliente.getEmail() + "\nPhone Number: " + cliente.getPhoneNumber() + "\nhas been edited correctly! üòÄ");
            actualizarLista();
            this.txtId.setText("");
            resetFields();
        } else  {
            dao.agregar(cliente);
            JOptionPane.showMessageDialog(rootPane, "Data:\nname: " + cliente.fullName() + "\nEmail: " + cliente.getEmail() + "\nPhone Number: " + cliente.getPhoneNumber() + "\nhas been saved correctly! üòÄ");
            actualizarLista();
            this.txtId.setText("");
            resetFields();
        }
    }
    
    private void resetFields() {
        this.txtName.setText("");//Formateo cuadro para escribir nombre.
        this.txtLastName.setText("");
        this.txtEmail.setText("");
        this.txtPhoneNumber.setText("");
    }
    
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        ClienteDao dao = new ClienteDao();
//        arrayLista = dao.listar();
        
        int selection = this.list.getSelectedIndex();

        if(this.list.isSelectedIndex(selection)) {
            String selection2 = this.list.getSelectedValue();//Linea de c√≥digo creada por m√≠ para que me muestre el nombre de la l√≠nea de c√≥digo que se elimin√≥ y no el n√∫mero.

            Cliente filaArray = arrayLista.get(selection);
            arrayLista.remove(selection);

            String id = filaArray.getId();
            dao.eliminar(id);
            JOptionPane.showMessageDialog(rootPane, selection2 + " has been deleted succefuly.\n Now the list has total " + arrayLista.size() + " elements.");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please, select a name on the list!");
        }
        actualizarLista();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        actualizarLista();
    }//GEN-LAST:event_formComponentShown

    private void idButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idButtonActionPerformed
        int selection = this.list.getSelectedIndex();
        
        if(this.list.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Please, select a name on the list!");
        } else {
            Cliente id = arrayLista.get(selection);
            String numId = id.getId();
            JOptionPane.showMessageDialog(rootPane, "\"ID\" number of " + id.getName() + " " + id.getLastName() + " is " + numId);
        }
//        actualizarLista();
    }//GEN-LAST:event_idButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        int selection = this.list.getSelectedIndex();
        
        if(this.list.isSelectedIndex(selection)) {
            Cliente cliente = arrayLista.get(selection);
            this.txtId.setText(cliente.getId());
            this.txtName.setText(cliente.getName());
            this.txtLastName.setText(cliente.getLastName());
            this.txtEmail.setText(cliente.getEmail());
            this.txtPhoneNumber.setText(cliente.getPhoneNumber());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please, select a name on the list!");
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void setAllIdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setAllIdButtonActionPerformed
//        int num = this.list.getMaxSelectionIndex();
        ClienteDao dao = new ClienteDao();
        int selection = this.list.getMaxSelectionIndex();
//        arrayLista.get(selection);
        dao.setearAllId(selection);
        actualizarLista();
        JOptionPane.showMessageDialog(rootPane, "ID Auto Increment has been reset succefully!");
    }//GEN-LAST:event_setAllIdButtonActionPerformed

    private void setIdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setIdButtonActionPerformed
        int selection = this.list.getSelectedIndex();
        if(!StringUtils.isEmptyOrWhitespaceOnly(this.txtSetId.getText()) && this.list.isSelectedIndex(selection)) {
            ClienteDao dao = new ClienteDao();
            Cliente cliente = arrayLista.get(selection);
            String id = cliente.getId();
            String valor = this.txtSetId.getText();
            String nombreCompleto = cliente.getName() + " " + cliente.getLastName();
            dao.setearId(id, valor);
            this.txtSetId.setText("");
            JOptionPane.showMessageDialog(rootPane, "Your ID from " + nombreCompleto + " has been edited succefully.");
        }else if(StringUtils.isEmptyOrWhitespaceOnly(this.txtSetId.getText()) && this.list.isSelectedIndex(selection)) {
            JOptionPane.showMessageDialog(rootPane, "Please insert a number on \"Edit Id:\"!");
        }else if(!StringUtils.isEmptyOrWhitespaceOnly(this.txtSetId.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Please, select a name on the list!");
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Please, select a name on the list and insert a number on \"Edit Id:\"!");
        }
        actualizarLista();
    }//GEN-LAST:event_setIdButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        resetFields();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void clearIdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearIdButtonActionPerformed
        this.txtId.setText("");
    }//GEN-LAST:event_clearIdButtonActionPerformed

    private void selectionOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionOutButtonActionPerformed
        actualizarLista();
    }//GEN-LAST:event_selectionOutButtonActionPerformed
    
    //Funci√≥n que actualiza la "Lista Visual".
    private void actualizarLista() {
        ClienteDao dao = new ClienteDao();
        arrayLista = dao.listar();
        
        DefaultListModel datos = new DefaultListModel();
        for (int i = 0; i < arrayLista.size(); i++) {
            Cliente selection = arrayLista.get(i);
            datos.addElement(selection.fullName()); //Mostrar el nombre completo.
        }
        this.list.setModel(datos);
    }
    
//    private String obtenerId() {
//        ClienteDao dao = new ClienteDao();
//        List<Cliente> arrayLista = dao.listar();
//        String numId = "";
////        DefaultListModel datos = new DefaultListModel();
//        for(int i = 0; i < arrayLista.size(); i++) {
//            Cliente selection = arrayLista.get(i);
////            datos.addElement(selection.getId());
//              numId = selection.getId();
//        }
//        return numId;
////        this.list.setModel(datos);
//    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton clearIdButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel email;
    private javax.swing.JLabel id;
    private javax.swing.JButton idButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lastName;
    private javax.swing.JList<String> list;
    private javax.swing.JLabel name;
    private javax.swing.JLabel phoneNumber;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton selectionOutButton;
    private javax.swing.JButton setAllIdButton;
    private javax.swing.JButton setIdButton;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JLabel txtId;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtSetId;
    // End of variables declaration//GEN-END:variables
}
